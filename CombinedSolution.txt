package smartPark;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Random;

public class Array_Checker {

	public static void main(String[] args) {
		// Initialize a random number generator
		Random rand = new Random();
		// Initialize an array with random numbers
		int[] array = new int[10];
		for (int i = 0; i < array.length; i++) {
			array[i] = rand.nextInt(10);
		}
		System.out.println("Array elements: " + Arrays.toString(array));
		// Find the highest and second highest numbers
		int highest = Integer.MIN_VALUE;
		int secondHighest = Integer.MIN_VALUE;
		for (int num : array) {
			if (num > highest) {
				secondHighest = highest;
				highest = num;
			} else if (num > secondHighest) {
				secondHighest = num;
			}
		}
		System.out.println("Highest number: " + highest);
		System.out.println("Second highest number: " + secondHighest);
		// Sort the array
		Arrays.sort(array);
		// Create two empty HashSets to store unique and duplicate elements
		HashSet<Integer> uniqueElements = new HashSet<>();
		HashSet<Integer> duplicateElements = new HashSet<>();

		// Iterate through the array
		for (int i = 0; i < array.length; i++) {
			// Check if the current element is already in the uniqueElements set
			if (!uniqueElements.contains(array[i])) {
				// If it's not, add it to the uniqueElements set
				uniqueElements.add(array[i]);
			} else {
				// If it's already in the set, add it to the duplicateElements set
				duplicateElements.add(array[i]);
			}
		}
		// Remove all elements from the uniqueElements set that are also in the
		// duplicateElements set
		uniqueElements.removeAll(duplicateElements);
		// Print out the remaining unique elements
		System.out.println("Elements that appears only once: " + uniqueElements);
		System.out.println("Duplicate elements: " + duplicateElements);
	}
}

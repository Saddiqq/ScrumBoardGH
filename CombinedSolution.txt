package smartPark; 
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;

public class Array_Checker {
	public static void main(String[] args) {
		// Initialize an array with random numbers
		Random rand = new Random();
		int[] array = new int[10];
		for (int i = 0; i < array.length; i++) {
			array[i] = rand.nextInt(10);
		}
		System.out.println("Array elements: " + Arrays.toString(array));
		// Find the highest and second highest numbers
		int highest = Integer.MIN_VALUE;
		int secondHighest = Integer.MIN_VALUE;
		for (int num : array) {
			if (num > highest) {
				secondHighest = highest;
				highest = num;
			} else if (num > secondHighest) {
				secondHighest = num;
			}
		}
		System.out.println("Highest number: " + highest);
		System.out.println("Second highest number: " + secondHighest);
		// Find the duplicated number
		Arrays.sort(array);
		for (int i = 0; i < array.length - 1; i++) {
			if (array[i] == array[i + 1]) {
				System.out.println("Duplicated number: " + array[i]);
				break;
			}
		}
		// Find the two numbers that appear only once in the array
		Map<Integer, Integer> map = new HashMap<>();
		for (int num : array) {
			map.put(num, map.getOrDefault(num, 0) + 1);
		}
		int[] singleNumbers = new int[2];
		int index = 0;
		for (Map.Entry<Integer, Integer> entry : map.entrySet()) {
			if (entry.getValue() == 1) {
				singleNumbers[index++] = entry.getKey();
				if (index == 2) {
					break;
				}
			}
		}
		System.out.println("Two numbers that appear only once in the array: " + Arrays.toString(singleNumbers));
	}
}